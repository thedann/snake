{"version":3,"sources":["components/gameover/gameover.module.css","components/scoreboard/scoreBoard.module.css","components/startmenu/startmenu.module.css","components/map/map.module.css","components/player/player.module.css","components/snack/snack.module.css","components/tail/tail.module.css","business/Direction.ts","components/player/player.tsx","components/snack/snack.tsx","business/controller.ts","business/tailhelper.ts","components/tail/tail.tsx","fire.js","context/index.tsx","components/gameover/gameover.tsx","components/map/map.tsx","components/counter/counter.tsx","components/scoreboard/scoreBoard.tsx","components/startmenu/startmenu.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Direction","Player","props","useState","left","top","style","className","player","Snack","snack","Controller","convertKeyCodeToDirection","key","direction","None","Left","Up","Right","Down","checkIfDirectionIsValid","currentDirection","newDirection","TailHelper","tail","lastPartOfTail","parts","length","playerPosition","tailLastPosition","this","getLastPositionOfTail","endOfPlayer","positionToRender","xPosition","yPosition","render","whereToRenderTail","push","Tail","map","part","index","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","ScoreContext","React","createContext","score","setScore","scoreList","setScoreList","ScoreProvider","children","Provider","value","useScore","context","useContext","Error","GameOver","nickname","setNickname","timestamp","Date","now","gameover","type","onChange","e","target","textinput","placeholder","maxLength","minLength","disabled","submitbutton","onClick","database","ref","set","toUpperCase","window","location","reload","Map","controller","tailHelper","initialTail","playerXPosition","setPlayerXPosition","playerYPosition","setPlayerYPosition","playerDirection","setPlayerDirection","playersTail","setPlayersTail","playerMoveTimer","setPlayerMoveTimer","playerMaxSpeed","playerIsMoving","setPlayerIsMoving","playerStartedGame","setPlayerStartedGame","isGameOver","setIsGameOver","snackXPosition","setSnackXPosition","snackYPosition","setSnackYPosition","snackIsVisible","setSnackIsVisible","giveRandomNumber","Math","floor","random","updatePosition","position","move","newPlayerPosition","forEach","checkIfPlayerTouchedTheTail","prevDirection","tailPartPosition","oldTailPartDirection","tempPos","moveTail","useEffect","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","timer","setTimeout","clearTimeout","currentPosition","updatedTail","addToTail","eatSnack","tabIndex","onKeyDown","event","keyCode","points","Counter","counter","number","ScoreBoard","scoreboard","header","item","emoji","getEmoji","StartMenu","startmenu","startbutton","startGameCallback","App","gameStart","setGameStart","renderScoreBoard","setRenderScoreBoard","list","orderByChild","limitToLast","on","snapshot","unshift","val","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.70556d61.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameover\":\"gameover_gameover__22WGM\",\"textinput\":\"gameover_textinput__CuDdl\",\"submitbutton\":\"gameover_submitbutton__2WKOS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scoreboard\":\"scoreBoard_scoreboard__1rB5T\",\"header\":\"scoreBoard_header__2Tmdp\",\"counter\":\"scoreBoard_counter__1yVmT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"startmenu\":\"startmenu_startmenu__2BudL\",\"startbutton\":\"startmenu_startbutton___EH_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"map_map__1cjP6\",\"dot\":\"map_dot__1hBTO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"player_player__i5ArV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snack\":\"snack_snack__120vH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tail\":\"tail_tail__1dVdw\"};","enum Direction {\n  Up = \"UP\",\n  Down = \"DOWN\",\n  Left = \"LEFT\",\n  Right = \"RIGHT\",\n  None = \"NONE\"\n}\n\nexport default Direction;\n","import React, { useState } from \"react\";\nimport style from \"./player.module.css\";\nimport Tail, { ITail } from \"../tail/tail\";\nimport Direction from \"../../business/Direction\";\n\ninterface IPlayer {\n  left: number;\n  top: number;\n  currentDirection: Direction;\n}\nconst Player: React.FC<IPlayer> = (props: IPlayer) => {\n  const [playerXPosition, setPlayerXPosition] = useState(props.left);\n  const [playerYPosition, setPlayerYPostion] = useState(props.top);\n\n  return (\n    <>\n      <div\n        style={{ left: props.left, top: props.top }}\n        className={style.player}\n      ></div>\n    </>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\nimport style from \"./snack.module.css\";\n\ninterface ISnack {\n  left: number;\n  top: number;\n}\n\nconst Snack: React.FC<ISnack> = (props: ISnack) => {\n  return (\n    <div\n      style={{ left: props.left, top: props.top }}\n      className={style.snack}\n    ></div>\n  );\n};\n\nexport default Snack;\n","import Direction from \"./Direction\";\n\nclass Controller {\n  convertKeyCodeToDirection = function(key: number): Direction {\n    let direction = Direction.None;\n    switch (key) {\n      case 37:\n        direction = Direction.Left;\n        break;\n      case 38:\n        direction = Direction.Up;\n        break;\n      case 39:\n        direction = Direction.Right;\n        break;\n      case 40:\n        direction = Direction.Down;\n        break;\n\n      default:\n    }\n    return direction;\n  };\n\n  checkIfDirectionIsValid = function(\n    currentDirection: Direction,\n    newDirection: Direction\n  ) {\n    if (\n      currentDirection === Direction.Left &&\n      newDirection === Direction.Right\n    ) {\n      return false;\n    } else if (\n      currentDirection === Direction.Right &&\n      newDirection === Direction.Left\n    ) {\n      return false;\n    } else if (\n      currentDirection === Direction.Up &&\n      newDirection === Direction.Down\n    ) {\n      return false;\n    } else if (\n      currentDirection === Direction.Down &&\n      newDirection === Direction.Up\n    ) {\n      return false;\n    }\n    return true;\n  };\n}\n\nexport default Controller;\n","import { ITail } from \"../components/tail/tail\";\nimport Position from \"./Position\";\nimport Direction from \"./Direction\";\nimport { directive } from \"@babel/types\";\n\nclass TailHelper {\n  private getLastPositionOfTail(tail: ITail): Position | null {\n    var lastPartOfTail = null;\n    if (tail && tail.parts) {\n      lastPartOfTail = tail.parts[tail.parts.length - 1];\n    }\n    return lastPartOfTail;\n  }\n\n  private whereToRenderTail(tail: ITail, playerPosition: Position): Position {\n    let tailLastPosition = this.getLastPositionOfTail(tail);\n\n    var endOfPlayer: Position = tailLastPosition\n      ? tailLastPosition\n      : playerPosition;\n    var positionToRender: Position = {\n      xPosition: endOfPlayer.xPosition,\n      yPosition: endOfPlayer.yPosition,\n      direction: endOfPlayer.direction\n    };\n\n    switch (endOfPlayer.direction) {\n      case Direction.Left:\n        positionToRender.xPosition = positionToRender.xPosition + 16;\n        break;\n      case Direction.Up:\n        positionToRender.yPosition = positionToRender.yPosition + 16;\n        break;\n      case Direction.Right:\n        positionToRender.xPosition = positionToRender.xPosition - 16;\n        break;\n      case Direction.Down:\n        positionToRender.yPosition = positionToRender.yPosition - 16;\n        break;\n\n      default:\n        break;\n    }\n    return positionToRender;\n  }\n\n  addToTail(tail: ITail, playerPosition: Position): ITail {\n    var render = this.whereToRenderTail(tail, playerPosition);\n    if (tail && tail.parts) {\n      tail.parts.push(render);\n    } else {\n      tail = { parts: [render] };\n    }\n    return tail;\n  }\n}\n\nexport default TailHelper;\n","import React from \"react\";\nimport style from \"./tail.module.css\";\nimport Position from \"../../business/Position\";\n\nexport interface ITail {\n  parts?: Position[];\n  // turningPoints?: Map<string, Direction>;\n}\n\nconst Tail: React.FC<ITail> = (props: ITail) => {\n  return (\n    <>\n      {props.parts &&\n        props.parts.map((part: Position, index: number) => {\n          return (\n            <div key={index}\n              style={{ left: part.xPosition, top: part.yPosition }}\n              className={style.tail}\n            ></div>\n          );\n        })}\n    </>\n  );\n};\n\nexport default Tail;\n","import firebase from 'firebase'\nvar config = { /* COPY THE ACTUAL CONFIG FROM FIREBASE CONSOLE */\n  apiKey: \"AIzaSyBlE_HAJ32yjCB7tipbq7BdImmopR5kQwA\",\n  authDomain: \"snake-d390c.firebaseapp.com\",\n  databaseURL: \"https://snake-d390c.firebaseio.com\",\n  storageBucket: \"snake-d390c.appspot.com\",\n  messagingSenderId: \"153498567525\"\n};\nvar fire = firebase.initializeApp(config);\nexport default fire;","import React, { useState, useContext, useEffect } from \"react\";\n\n/*\n  TODO: add playerState to the context. \n  ScoreContext -> something better naming\n*/\n\ntype Data = {\n  score: number;\n  setScore: (score: number) => void;\n  scoreList: string[];\n  setScoreList: (scoreList: string[]) => void;\n};\n\nconst ScoreContext = React.createContext<Data>({\n  score: 0,\n  setScore: () => {},\n  scoreList: [''],\n  setScoreList: () => {},\n});\n\nconst ScoreProvider: React.FC = ({ children }) => {\n  const [score, setScore] = useState<number>(0);\n  const [scoreList, setScoreList] = useState<string[]>([]);\n  \n\n  return (\n    <ScoreContext.Provider value={{ score, setScore, scoreList, setScoreList}}>\n      {children}\n    </ScoreContext.Provider>\n  );\n};\n\nconst useScore = () => {\n  const context = useContext(ScoreContext);\n\n  if (!context) {\n    throw new Error(\"Wrap component in ScoreProvider \");\n  }\n\n  return context;\n};\n\nexport { ScoreProvider, useScore };\n","import React, { useState } from \"react\";\nimport style from \"./gameover.module.css\";\nimport fire from \"../../fire\";\nimport { useScore } from \"../../context\";\n\ninterface IGameOver {\n  points: number;\n}\n\nconst GameOver: React.FC<IGameOver> = (props: IGameOver) => {\n  const [nickname, setNickname] = useState('');\n  const { score } = useScore();\n\n\n  let timestamp = Date.now();\n\n  const pointsText = () => {\n    if (score === 1) {\n      return \"You got \" + score + \" point\";\n    } else {\n      return \"You got \" + score + \" points\";\n    }\n  };\n\n  function sendPoints () {\n    fire.database().ref('highscore/' + timestamp).set({\n      score: score,\n      nickname: nickname.toUpperCase()\n    },() => {\n      window.location.reload();\n    }\n    );\n  }\n\n  return (\n    <div className={style.gameover}>\n      <h1>Game over!</h1>\n      <h3>{pointsText()}</h3>\n      <input type=\"text\" \n        value={nickname} \n        onChange={e => setNickname(e.target.value)}\n        className={style.textinput}\n        placeholder=\"enter your nick\" maxLength={3} minLength={1}>\n        \n        </input>\n      <button disabled={nickname.length == 0} className={style.submitbutton} onClick={() => sendPoints()} >Submit your score</button>\n    </div>\n  );\n};\n\nexport default GameOver;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport style from \"./map.module.css\";\nimport Player from \"../player/player\";\nimport Snack from \"../snack/snack\";\nimport Direction from \"../../business/Direction\";\nimport Controller from \"../../business/controller\";\nimport TailHelper from \"../../business/tailhelper\";\nimport Tail, { ITail } from \"../tail/tail\";\nimport Position from \"../../business/Position\";\nimport GameOver from \"../gameover/gameover\";\nimport { useScore } from \"../../context\";\nimport fire from \"../../fire\";\n\nconst Map: React.FC = () => {\n  let controller = new Controller();\n  let tailHelper = new TailHelper();\n  let initialTail: ITail = {};\n\n  //Store for SCORE\n  // const store = React.useContext(scoreContext);\n\n  const { score, setScore } = useScore();\n\n  //Hooks for PLAYER\n  const [playerXPosition, setPlayerXPosition] = useState(80);\n  const [playerYPosition, setPlayerYPosition] = useState(80);\n  const [playerDirection, setPlayerDirection] = useState(Direction.None);\n  const [playersTail, setPlayersTail] = useState(initialTail);\n  const [playerMoveTimer, setPlayerMoveTimer] = useState(320);\n  const [playerMaxSpeed] = useState(70);\n  const [playerIsMoving, setPlayerIsMoving] = useState(0);\n  const [playerStartedGame, setPlayerStartedGame] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n\n  //Hooks for SNACK\n  const [snackXPosition, setSnackXPosition] = useState(96);\n  const [snackYPosition, setSnackYPosition] = useState(96);\n  const [snackIsVisible, setSnackIsVisible] = useState(false);\n\n  function giveRandomNumber() {\n    var times = Math.floor(Math.random() * 19) + 1;\n    var number = 16 * times;\n    return number;\n  }\n\n  //Custom interval Hook\n  //from here: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n  function useInterval(callback: any, delay: number) {\n    const savedCallback = useRef<any>();\n\n    // Remember the latest callback.\n    useEffect(() => {\n      savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n      function tick() {\n        if (savedCallback && savedCallback.current != null) {\n          savedCallback.current();\n        }\n      }\n      if (delay !== null) {\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n      }\n    }, [delay]);\n  }\n\n  React.useEffect(() => {\n    let turn = playerIsMoving + 1;\n    setPlayerIsMoving(turn);\n  }, [playerStartedGame]);\n\n  useInterval(() => {\n    move(playerDirection);\n    setPlayerIsMoving(playerIsMoving + 1);\n  }, playerMoveTimer);\n\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      setSnackIsVisible(true);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [snackIsVisible]);\n\n  React.useEffect(() => {\n    if (\n      playerXPosition === snackXPosition &&\n      playerYPosition === snackYPosition\n      ) {\n        //we eat the snack! yum!\n        eatSnack();\n      }\n  }, [playerXPosition, playerYPosition]);\n\n  React.useEffect(() => {\n    if (isGameOver) {\n      setPlayerIsMoving(0);\n      setPlayerDirection(Direction.None);\n      setPlayerXPosition(80);\n      setPlayerYPosition(80);\n      setPlayersTail(initialTail);\n\n    }\n  }, [isGameOver]);\n\n  function eatSnack() {\n    setScore(score + 1);\n    setSnackIsVisible(false);\n    setSnackXPosition(giveRandomNumber());\n    setSnackYPosition(giveRandomNumber());\n    if (playerMoveTimer >= playerMaxSpeed) {\n      setPlayerMoveTimer(playerMoveTimer * 0.8);\n    } else {\n\n    }\n\n    let currentPosition: Position = {\n      xPosition: playerXPosition,\n      yPosition: playerYPosition,\n      direction: playerDirection\n    };\n    let updatedTail = tailHelper.addToTail(playersTail, currentPosition);\n    setPlayersTail(updatedTail);\n  }\n\n  function updatePosition(position: Position): Position {\n    let direction = position.direction;\n    switch (direction) {\n      case Direction.Left:\n        if (position.xPosition - 16 > -16) {\n          position.xPosition = position.xPosition - 16;\n        }\n\n        break;\n      case Direction.Up:\n        //up\n        if (position.yPosition - 16 > -16) {\n          position.yPosition = position.yPosition - 16;\n        }\n        break;\n      case Direction.Right:\n        //right\n        if (position.xPosition + 16 < 20 * 16) {\n          position.xPosition = position.xPosition + 16;\n        }\n\n        break;\n      case Direction.Down:\n        //down\n        if (position.yPosition + 16 < 20 * 16) {\n          position.yPosition = position.yPosition + 16;\n        }\n        break;\n\n      default:\n        break;\n    }\n    return position;\n  }\n\n  function handleKeyPress(event: React.KeyboardEvent) {\n    var key = event.keyCode;\n    var direction = controller.convertKeyCodeToDirection(key);\n    //check if player just entered the same direction again....\n    //or the opposite one!\n    if (\n      direction !== playerDirection &&\n      controller.checkIfDirectionIsValid(playerDirection, direction)\n    ) {\n      setPlayerDirection(direction);\n      if (direction !== Direction.None) {\n        move(direction);\n      }\n    }\n  }\n\n  function checkIfPlayerTouchedTheTail(\n    playerPosition: Position,\n    tail: ITail\n  ): boolean {\n    let isGameOver = false;\n    if (tail.parts) {\n      tail.parts.forEach(part => {\n        if (\n          part.yPosition === playerPosition.yPosition &&\n          part.xPosition === playerPosition.xPosition\n        ) {\n          isGameOver = true;\n        }\n      });\n    }\n    return isGameOver;\n  }\n\n  function move(direction: Direction) {\n    if (!playerStartedGame) {\n      setPlayerStartedGame(true);\n    }\n    if (direction !== Direction.None) {\n      let newPlayerPosition: Position = {\n        xPosition: playerXPosition,\n        yPosition: playerYPosition,\n        direction: direction\n      };\n\n      newPlayerPosition = updatePosition(newPlayerPosition);\n\n      if(direction === Direction.Down || direction === Direction.Up) {\n        setPlayerYPosition(newPlayerPosition.yPosition);\n      } else {\n        setPlayerXPosition(newPlayerPosition.xPosition);\n      }\n\n      let isGameOver = checkIfPlayerTouchedTheTail(\n        newPlayerPosition,\n        playersTail\n      );\n      if (!isGameOver) {\n        if (playersTail.parts) {\n          moveTail(playersTail);\n        }\n      } else {\n        setIsGameOver(true);\n      }\n    }\n  }\n\n  function moveTail(playersTail: ITail) {\n    if(playersTail != null && playersTail.parts) {\n      let prevDirection = playerDirection;\n      playersTail.parts.forEach((tailPartPosition: Position) => {\n        let oldTailPartDirection = tailPartPosition.direction;\n          tailPartPosition.direction = prevDirection;\n          \n          let tempPos: Position = {\n            xPosition: tailPartPosition.xPosition,\n            yPosition: tailPartPosition.yPosition,\n            direction: tailPartPosition.direction\n          };\n          \n          prevDirection = oldTailPartDirection!;\n          tempPos = updatePosition(tempPos);\n          tailPartPosition.xPosition = tempPos.xPosition;\n          tailPartPosition.yPosition = tempPos.yPosition;\n        });\n        \n        setPlayersTail(playersTail);\n      }\n  }\n\n  return (\n    <div className={style.map} tabIndex={-1} onKeyDown={handleKeyPress}>\n      {!isGameOver ? (\n        <>\n          <Player\n            currentDirection={playerDirection}\n            left={playerXPosition}\n            top={playerYPosition}\n          ></Player>\n          {playersTail.parts && <Tail parts={playersTail.parts}></Tail>}\n          {snackIsVisible && (\n            <Snack left={snackXPosition} top={snackYPosition}></Snack>\n          )}\n        </>\n      ) : (\n        <>\n          <GameOver points={score}></GameOver>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Map;\n","import React from \"react\";\nimport style from \"./counter.module.css\";\n\ninterface ICounter {\n  number: number;\n}\n\nconst Counter: React.FC<ICounter> = (props: ICounter) => {\n  return <span className={style.counter}>{props.number}</span>;\n};\n\nexport default Counter;\n","import React, { useState, useEffect } from \"react\";\nimport style from \"./scoreBoard.module.css\";\nimport { useScore } from \"../../context\";\nimport Counter from \"../counter/counter\";\n\ninterface IScoreBoard {\n  scoreList?: string[];\n}\n\nconst ScoreBoard: React.FC<IScoreBoard> = (props: IScoreBoard) => {\n  const { score } = useScore();\n\n  function getEmoji(index:number) {\n    var emoji = \"\";\n    switch (index) {\n      case 0:\n        emoji = \"👑\"\n        break;\n      case 1:\n        emoji = \"🥈\"\n       break;\n       case 2:\n         emoji = \"🥉\"\n         break;\n\n      default:\n        break;\n    }\n    return emoji;\n  }\n\n\n  return (\n    <div className={style.scoreboard}>\n      <div className={style.header}>React Snake Game</div>\n      <div className={style.counter}>\n        <Counter number={score}></Counter>\n      </div>\n      <div>\n        <ul>\n          {props && props.scoreList && props.scoreList.map((item: any, index: number) => {\n            return (\n              <li key={index}>\n                { getEmoji(index) }\n                \n                 {item.nickname} : {item.score}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ScoreBoard;\n","import React from \"react\";\nimport style from \"./startmenu.module.css\";\n\ninterface IStartMenu {\n  startGameCallback: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst StartMenu: React.FC<IStartMenu> = (props: IStartMenu) => {\n\n  return (\n    <div className={style.startmenu}>\n      <button\n        className={style.startbutton}\n        onClick={() => props.startGameCallback(true) }\n        type=\"button\"\n      >\n        Start game\n      </button>\n    </div>\n  );\n};\n\nexport default StartMenu;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport \"./App.css\";\nimport Map from \"./components/map/map\";\nimport ScoreBoard from \"./components/scoreboard/scoreBoard\";\nimport StartMenu from \"./components/startmenu/startmenu\";\nimport { ScoreProvider, useScore } from \"./context\";\nimport fire from \"./fire\";\n\nconst App: React.FC = () => {\n  const [gameStart, setGameStart] = useState(false);\n  const [scoreList, setScoreList] = useState(['']);\n  const [renderScoreBoard, setRenderScoreBoard] = useState(false);\n\n  //const { score, setScoreList } = useScore();\n\n\n  useEffect(() => {\n    var list:any[] = [];\n    var ref = fire.database().ref(\"highscore/\");\n\n    var query = ref.orderByChild(\"score\").limitToLast(3);\n\n    query.on(\"child_added\", (snapshot) => {\n      list.unshift(snapshot.val());\n    });\n    setScoreList(list);\n  }, [gameStart]);\n\n  useEffect(() => {\n    if(scoreList.length > 0) {\n      setRenderScoreBoard(true);\n    }\n\n  }, [scoreList])\n\n  return (\n    <ScoreProvider>\n      <div className=\"main-container\">\n        {!gameStart ? (\n          <StartMenu startGameCallback={setGameStart}></StartMenu>\n        ) : (\n          <>\n            <Map></Map>\n            {\n              renderScoreBoard && \n              <ScoreBoard scoreList={scoreList}></ScoreBoard>\n            }\n\n          </>\n        )}\n      </div>\n    </ScoreProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}