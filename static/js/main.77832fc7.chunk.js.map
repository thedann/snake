{"version":3,"sources":["components/scoreboard/scoreBoard.module.css","components/startmenu/startmenu.module.css","components/map/map.module.css","components/player/player.module.css","components/snack/snack.module.css","components/tail/tail.module.css","components/gameover/gameover.module.css","components/counter/counter.module.css","business/Direction.ts","components/player/player.tsx","components/snack/snack.tsx","business/controller.ts","business/tailhelper.ts","components/tail/tail.tsx","components/gameover/gameover.tsx","context/index.tsx","components/map/map.tsx","components/counter/counter.tsx","components/scoreboard/scoreBoard.tsx","components/startmenu/startmenu.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Direction","Player","props","useState","left","top","style","className","player","Snack","snack","Controller","convertKeyCodeToDirection","key","direction","None","Left","Up","Right","Down","checkIfDirectionIsValid","currentDirection","newDirection","TailHelper","tail","lastPartOfTail","parts","length","playerPosition","tailLastPosition","this","getLastPositionOfTail","endOfPlayer","positionToRender","xPosition","yPosition","render","whereToRenderTail","push","Tail","map","part","index","GameOver","gameover","points","ScoreContext","React","createContext","score","setScore","ScoreProvider","children","Provider","value","useScore","context","useContext","Error","Map","controller","tailHelper","initialTail","playerXPosition","setPlayerXPosition","playerYPosition","setPlayerYPosition","playerDirection","setPlayerDirection","playersTail","setPlayersTail","playerMoveTimer","setPlayerMoveTimer","playerMaxSpeed","playerIsMoving","setPlayerIsMoving","playerStartedGame","setPlayerStartedGame","isGameOver","setIsGameOver","snackXPosition","setSnackXPosition","snackYPosition","setSnackYPosition","snackIsVisible","setSnackIsVisible","giveRandomNumber","Math","floor","random","updatePosition","position","move","newPlayerPosition","forEach","checkIfPlayerTouchedTheTail","prevDirection","tailPartPosition","oldTailPartDirection","tempPos","moveTail","useEffect","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","timer","setTimeout","clearTimeout","currentPosition","updatedTail","addToTail","eatSnack","tabIndex","onKeyDown","event","keyCode","Counter","counter","number","ScoreBoard","scoreboard","header","StartMenu","startmenu","startbutton","onClick","startGameCallback","type","App","gameStart","setGameStart","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.77832fc7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"scoreboard\":\"scoreBoard_scoreboard__1rB5T\",\"header\":\"scoreBoard_header__2Tmdp\",\"counter\":\"scoreBoard_counter__1yVmT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"startmenu\":\"startmenu_startmenu__2BudL\",\"startbutton\":\"startmenu_startbutton___EH_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"map_map__1cjP6\",\"dot\":\"map_dot__1hBTO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"player_player__i5ArV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snack\":\"snack_snack__120vH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tail\":\"tail_tail__1dVdw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameover\":\"gameover_gameover__22WGM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"counter_counter__SHpH-\",\"pulse\":\"counter_pulse__2dX7s\"};","enum Direction {\r\n  Up = \"UP\",\r\n  Down = \"DOWN\",\r\n  Left = \"LEFT\",\r\n  Right = \"RIGHT\",\r\n  None = \"NONE\"\r\n}\r\n\r\nexport default Direction;\r\n","import React, { useState } from \"react\";\r\nimport style from \"./player.module.css\";\r\nimport Tail, { ITail } from \"../tail/tail\";\r\nimport Direction from \"../../business/Direction\";\r\n\r\ninterface IPlayer {\r\n  left: number;\r\n  top: number;\r\n  currentDirection: Direction;\r\n}\r\nconst Player: React.FC<IPlayer> = (props: IPlayer) => {\r\n  const [playerXPosition, setPlayerXPosition] = useState(props.left);\r\n  const [playerYPosition, setPlayerYPostion] = useState(props.top);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{ left: props.left, top: props.top }}\r\n        className={style.player}\r\n      ></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\nimport style from \"./snack.module.css\";\r\n\r\ninterface ISnack {\r\n  left: number;\r\n  top: number;\r\n}\r\n\r\nconst Snack: React.FC<ISnack> = (props: ISnack) => {\r\n  return (\r\n    <div\r\n      style={{ left: props.left, top: props.top }}\r\n      className={style.snack}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Snack;\r\n","import Direction from \"./Direction\";\r\n\r\nclass Controller {\r\n  convertKeyCodeToDirection = function(key: number): Direction {\r\n    let direction = Direction.None;\r\n    switch (key) {\r\n      case 37:\r\n        direction = Direction.Left;\r\n        break;\r\n      case 38:\r\n        direction = Direction.Up;\r\n        break;\r\n      case 39:\r\n        direction = Direction.Right;\r\n        break;\r\n      case 40:\r\n        direction = Direction.Down;\r\n        break;\r\n\r\n      default:\r\n    }\r\n    return direction;\r\n  };\r\n\r\n  checkIfDirectionIsValid = function(\r\n    currentDirection: Direction,\r\n    newDirection: Direction\r\n  ) {\r\n    if (\r\n      currentDirection === Direction.Left &&\r\n      newDirection === Direction.Right\r\n    ) {\r\n      return false;\r\n    } else if (\r\n      currentDirection === Direction.Right &&\r\n      newDirection === Direction.Left\r\n    ) {\r\n      return false;\r\n    } else if (\r\n      currentDirection === Direction.Up &&\r\n      newDirection === Direction.Down\r\n    ) {\r\n      return false;\r\n    } else if (\r\n      currentDirection === Direction.Down &&\r\n      newDirection === Direction.Up\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n}\r\n\r\nexport default Controller;\r\n","import { ITail } from \"../components/tail/tail\";\r\nimport Position from \"./Position\";\r\nimport Direction from \"./Direction\";\r\nimport { directive } from \"@babel/types\";\r\n\r\nclass TailHelper {\r\n  private getLastPositionOfTail(tail: ITail): Position | null {\r\n    var lastPartOfTail = null;\r\n    if (tail && tail.parts) {\r\n      lastPartOfTail = tail.parts[tail.parts.length - 1];\r\n    }\r\n    return lastPartOfTail;\r\n  }\r\n\r\n  private whereToRenderTail(tail: ITail, playerPosition: Position): Position {\r\n    let tailLastPosition = this.getLastPositionOfTail(tail);\r\n\r\n    var endOfPlayer: Position = tailLastPosition\r\n      ? tailLastPosition\r\n      : playerPosition;\r\n    var positionToRender: Position = {\r\n      xPosition: endOfPlayer.xPosition,\r\n      yPosition: endOfPlayer.yPosition,\r\n      direction: endOfPlayer.direction\r\n    };\r\n\r\n    switch (endOfPlayer.direction) {\r\n      case Direction.Left:\r\n        positionToRender.xPosition = positionToRender.xPosition + 16;\r\n        break;\r\n      case Direction.Up:\r\n        positionToRender.yPosition = positionToRender.yPosition + 16;\r\n        break;\r\n      case Direction.Right:\r\n        positionToRender.xPosition = positionToRender.xPosition - 16;\r\n        break;\r\n      case Direction.Down:\r\n        positionToRender.yPosition = positionToRender.yPosition - 16;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    return positionToRender;\r\n  }\r\n\r\n  addToTail(tail: ITail, playerPosition: Position): ITail {\r\n    var render = this.whereToRenderTail(tail, playerPosition);\r\n    if (tail && tail.parts) {\r\n      tail.parts.push(render);\r\n    } else {\r\n      tail = { parts: [render] };\r\n    }\r\n    return tail;\r\n  }\r\n}\r\n\r\nexport default TailHelper;\r\n","import React from \"react\";\r\nimport style from \"./tail.module.css\";\r\nimport Position from \"../../business/Position\";\r\n\r\nexport interface ITail {\r\n  parts?: Position[];\r\n  // turningPoints?: Map<string, Direction>;\r\n}\r\n\r\nconst Tail: React.FC<ITail> = (props: ITail) => {\r\n  return (\r\n    <>\r\n      {props.parts &&\r\n        props.parts.map((part: Position, index: number) => {\r\n          return (\r\n            <div\r\n              style={{ left: part.xPosition, top: part.yPosition }}\r\n              className={style.tail}\r\n            ></div>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tail;\r\n","import React from \"react\";\r\nimport style from \"./gameover.module.css\";\r\n\r\ninterface IGameOver {\r\n  points: number;\r\n}\r\n\r\nconst GameOver: React.FC<IGameOver> = (props: IGameOver) => {\r\n  const pointsText = () => {\r\n    if (props.points === 1) {\r\n      return \"You got \" + props.points + \" point\";\r\n    } else {\r\n      return \"You got \" + props.points + \" points\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={style.gameover}>\r\n      <h1>Game over!</h1>\r\n      <h3>{pointsText()}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameOver;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\n/*\r\n  TODO: add playerState to the context. \r\n  ScoreContext -> something better naming\r\n*/\r\n\r\ntype Data = {\r\n  score: number;\r\n  setScore: (score: number) => void;\r\n};\r\n\r\nconst ScoreContext = React.createContext<Data>({\r\n  score: 0,\r\n  setScore: () => {}\r\n});\r\n\r\nconst ScoreProvider: React.FC = ({ children }) => {\r\n  const [score, setScore] = useState<number>(0);\r\n\r\n  return (\r\n    <ScoreContext.Provider value={{ score, setScore }}>\r\n      {children}\r\n    </ScoreContext.Provider>\r\n  );\r\n};\r\n\r\nconst useScore = () => {\r\n  const context = useContext(ScoreContext);\r\n\r\n  if (!context) {\r\n    throw new Error(\"Wrap component in ScoreProvider \");\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\nexport { ScoreProvider, useScore };\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport style from \"./map.module.css\";\r\nimport Player from \"../player/player\";\r\nimport Snack from \"../snack/snack\";\r\nimport Direction from \"../../business/Direction\";\r\nimport Controller from \"../../business/controller\";\r\nimport TailHelper from \"../../business/tailhelper\";\r\nimport Tail, { ITail } from \"../tail/tail\";\r\nimport Position from \"../../business/Position\";\r\nimport GameOver from \"../gameover/gameover\";\r\nimport { useScore } from \"../../context\";\r\n\r\nconst Map: React.FC = () => {\r\n  let controller = new Controller();\r\n  let tailHelper = new TailHelper();\r\n  let initialTail: ITail = {};\r\n\r\n  //Store for SCORE\r\n  // const store = React.useContext(scoreContext);\r\n\r\n  const { score, setScore } = useScore();\r\n\r\n  //Hooks for PLAYER\r\n  const [playerXPosition, setPlayerXPosition] = useState(80);\r\n  const [playerYPosition, setPlayerYPosition] = useState(80);\r\n  const [playerDirection, setPlayerDirection] = useState(Direction.None);\r\n  const [playersTail, setPlayersTail] = useState(initialTail);\r\n  const [playerMoveTimer, setPlayerMoveTimer] = useState(320);\r\n  const [playerMaxSpeed] = useState(70);\r\n  const [playerIsMoving, setPlayerIsMoving] = useState(0);\r\n  const [playerStartedGame, setPlayerStartedGame] = useState(false);\r\n  const [isGameOver, setIsGameOver] = useState(false);\r\n\r\n  //Hooks for SNACK\r\n  const [snackXPosition, setSnackXPosition] = useState(96);\r\n  const [snackYPosition, setSnackYPosition] = useState(96);\r\n  const [snackIsVisible, setSnackIsVisible] = useState(false);\r\n\r\n  function giveRandomNumber() {\r\n    var times = Math.floor(Math.random() * 19) + 1;\r\n    var number = 16 * times;\r\n    return number;\r\n  }\r\n\r\n  //Custom interval Hook\r\n  //from here: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\r\n  function useInterval(callback: any, delay: number) {\r\n    const savedCallback = useRef<any>();\r\n\r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    // Set up the interval.\r\n    useEffect(() => {\r\n      function tick() {\r\n        if (savedCallback && savedCallback.current != null) {\r\n          savedCallback.current();\r\n        }\r\n      }\r\n      if (delay !== null) {\r\n        let id = setInterval(tick, delay);\r\n        return () => clearInterval(id);\r\n      }\r\n    }, [delay]);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    let turn = playerIsMoving + 1;\r\n    setPlayerIsMoving(turn);\r\n  }, [playerStartedGame]);\r\n\r\n  useInterval(() => {\r\n    move(playerDirection);\r\n    setPlayerIsMoving(playerIsMoving + 1);\r\n  }, playerMoveTimer);\r\n\r\n  React.useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setSnackIsVisible(true);\r\n    }, 1000);\r\n    return () => clearTimeout(timer);\r\n  }, [snackIsVisible]);\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      playerXPosition === snackXPosition &&\r\n      playerYPosition === snackYPosition\r\n      ) {\r\n        //we eat the snack! yum!\r\n        eatSnack();\r\n      }\r\n  }, [playerXPosition, playerYPosition]);\r\n\r\n  React.useEffect(() => {\r\n    if (isGameOver) {\r\n      setPlayerIsMoving(0);\r\n      setPlayerDirection(Direction.None);\r\n      setPlayerXPosition(80);\r\n      setPlayerYPosition(80);\r\n      setPlayersTail(initialTail);\r\n    }\r\n  }, [isGameOver]);\r\n\r\n  function eatSnack() {\r\n    setScore(score + 1);\r\n    setSnackIsVisible(false);\r\n    setSnackXPosition(giveRandomNumber());\r\n    setSnackYPosition(giveRandomNumber());\r\n    if (playerMoveTimer >= playerMaxSpeed) {\r\n      setPlayerMoveTimer(playerMoveTimer * 0.8);\r\n    } else {\r\n\r\n    }\r\n\r\n    let currentPosition: Position = {\r\n      xPosition: playerXPosition,\r\n      yPosition: playerYPosition,\r\n      direction: playerDirection\r\n    };\r\n    let updatedTail = tailHelper.addToTail(playersTail, currentPosition);\r\n    setPlayersTail(updatedTail);\r\n  }\r\n\r\n  function updatePosition(position: Position): Position {\r\n    let direction = position.direction;\r\n    switch (direction) {\r\n      case Direction.Left:\r\n        if (position.xPosition - 16 > -16) {\r\n          position.xPosition = position.xPosition - 16;\r\n        }\r\n\r\n        break;\r\n      case Direction.Up:\r\n        //up\r\n        if (position.yPosition - 16 > -16) {\r\n          position.yPosition = position.yPosition - 16;\r\n        }\r\n        break;\r\n      case Direction.Right:\r\n        //right\r\n        if (position.xPosition + 16 < 20 * 16) {\r\n          position.xPosition = position.xPosition + 16;\r\n        }\r\n\r\n        break;\r\n      case Direction.Down:\r\n        //down\r\n        if (position.yPosition + 16 < 20 * 16) {\r\n          position.yPosition = position.yPosition + 16;\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    return position;\r\n  }\r\n\r\n  function handleKeyPress(event: React.KeyboardEvent) {\r\n    var key = event.keyCode;\r\n    var direction = controller.convertKeyCodeToDirection(key);\r\n    //check if player just entered the same direction again....\r\n    //or the opposite one!\r\n    if (\r\n      direction !== playerDirection &&\r\n      controller.checkIfDirectionIsValid(playerDirection, direction)\r\n    ) {\r\n      setPlayerDirection(direction);\r\n      if (direction !== Direction.None) {\r\n        move(direction);\r\n      }\r\n    }\r\n  }\r\n\r\n  function checkIfPlayerTouchedTheTail(\r\n    playerPosition: Position,\r\n    tail: ITail\r\n  ): boolean {\r\n    let isGameOver = false;\r\n    if (tail.parts) {\r\n      tail.parts.forEach(part => {\r\n        if (\r\n          part.yPosition === playerPosition.yPosition &&\r\n          part.xPosition === playerPosition.xPosition\r\n        ) {\r\n          isGameOver = true;\r\n        }\r\n      });\r\n    }\r\n    return isGameOver;\r\n  }\r\n\r\n  function move(direction: Direction) {\r\n    if (!playerStartedGame) {\r\n      setPlayerStartedGame(true);\r\n    }\r\n    if (direction !== Direction.None) {\r\n      let newPlayerPosition: Position = {\r\n        xPosition: playerXPosition,\r\n        yPosition: playerYPosition,\r\n        direction: direction\r\n      };\r\n\r\n      newPlayerPosition = updatePosition(newPlayerPosition);\r\n\r\n      if(direction === Direction.Down || direction === Direction.Up) {\r\n        setPlayerYPosition(newPlayerPosition.yPosition);\r\n      } else {\r\n        setPlayerXPosition(newPlayerPosition.xPosition);\r\n      }\r\n\r\n      let isGameOver = checkIfPlayerTouchedTheTail(\r\n        newPlayerPosition,\r\n        playersTail\r\n      );\r\n      if (!isGameOver) {\r\n        if (playersTail.parts) {\r\n          moveTail(playersTail);\r\n        }\r\n      } else {\r\n        setIsGameOver(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  function moveTail(playersTail: ITail) {\r\n    if(playersTail != null && playersTail.parts) {\r\n      let prevDirection = playerDirection;\r\n      playersTail.parts.forEach((tailPartPosition: Position) => {\r\n        let oldTailPartDirection = tailPartPosition.direction;\r\n          tailPartPosition.direction = prevDirection;\r\n          \r\n          let tempPos: Position = {\r\n            xPosition: tailPartPosition.xPosition,\r\n            yPosition: tailPartPosition.yPosition,\r\n            direction: tailPartPosition.direction\r\n          };\r\n          \r\n          prevDirection = oldTailPartDirection!;\r\n          tempPos = updatePosition(tempPos);\r\n          tailPartPosition.xPosition = tempPos.xPosition;\r\n          tailPartPosition.yPosition = tempPos.yPosition;\r\n        });\r\n        \r\n        setPlayersTail(playersTail);\r\n      }\r\n  }\r\n\r\n  return (\r\n    <div className={style.map} tabIndex={0} onKeyDown={handleKeyPress}>\r\n      {!isGameOver ? (\r\n        <>\r\n          <Player\r\n            currentDirection={playerDirection}\r\n            left={playerXPosition}\r\n            top={playerYPosition}\r\n          ></Player>\r\n          {playersTail.parts && <Tail parts={playersTail.parts}></Tail>}\r\n          {snackIsVisible && (\r\n            <Snack left={snackXPosition} top={snackYPosition}></Snack>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <GameOver points={score}></GameOver>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\nimport style from \"./counter.module.css\";\r\n\r\ninterface ICounter {\r\n  number: number;\r\n}\r\n\r\nconst Counter: React.FC<ICounter> = (props: ICounter) => {\r\n  return <span className={style.counter}>{props.number}</span>;\r\n};\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\nimport style from \"./scoreBoard.module.css\";\r\nimport { useScore } from \"../../context\";\r\nimport Counter from \"../counter/counter\";\r\n\r\nconst ScoreBoard: React.FC = () => {\r\n  const { score } = useScore();\r\n\r\n  return (\r\n    <div className={style.scoreboard}>\r\n      <div className={style.header}>React Snake Game</div>\r\n      <div className={style.counter}>\r\n        <Counter number={score}></Counter>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScoreBoard;\r\n","import React from \"react\";\r\nimport style from \"./startmenu.module.css\";\r\n\r\ninterface IStartMenu {\r\n  startGameCallback: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst StartMenu: React.FC<IStartMenu> = (props: IStartMenu) => {\r\n  return (\r\n    <div className={style.startmenu}>\r\n      <button\r\n        className={style.startbutton}\r\n        onClick={() => props.startGameCallback(true)}\r\n        type=\"button\"\r\n      >\r\n        Start game\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartMenu;\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport Map from \"./components/map/map\";\r\nimport ScoreBoard from \"./components/scoreboard/scoreBoard\";\r\nimport StartMenu from \"./components/startmenu/startmenu\";\r\nimport { ScoreProvider } from \"./context\";\r\n\r\ninterface IAppState {\r\n  GameStart: boolean;\r\n}\r\n\r\nconst App: React.FC = () => {\r\n  const [gameStart, setGameStart] = useState(false);\r\n\r\n  return (\r\n    <ScoreProvider>\r\n      <div className=\"main-container\">\r\n        {!gameStart ? (\r\n          <StartMenu startGameCallback={setGameStart}></StartMenu>\r\n        ) : (\r\n          <>\r\n            <Map></Map>\r\n            <ScoreBoard></ScoreBoard>\r\n          </>\r\n        )}\r\n      </div>\r\n    </ScoreProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}